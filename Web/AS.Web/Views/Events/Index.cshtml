@model IEnumerable<EventVM>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div>
    <h4>ASEvents</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Location)
        </dt>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ImageUrl)
        </dt>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateTime)
        </dt>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserId)
        </dt>

        @foreach (var item in Model)
        {
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.Location)
            </dd>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.Description)
            </dd>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.ImageUrl)
            </dd>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.DateTime)
            </dd>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.UserId)
            </dd>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.GoingUsers.Count)
            </dd>
            <div class="collapse navbar-collapse d-flex justify-content-end" id="navbarNav">
                @if (!item.IsSubscribed)
                {
                    <a asp-controller="Events" asp-action="Subscribe" asp-route-id="@item.Id">Subscribe</a>
                }
                else 
                {
                    <a asp-controller="Events" asp-action="UnSubscribe" asp-route-id="@item.Id">UnSubscribe</a> 
                }
                
            </div>
        }
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
